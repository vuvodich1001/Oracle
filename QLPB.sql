CREATE TABLE EMPLOYEE(
    EMPNO NUMBER(5),
    EMPNAME VARCHAR2(30),
    BIRTHDAY DATE,
    DEPTNO NUMBER(5),
    MGRNO NUMBER(5) NOT NULL,
    STARTDATE DATE,
    SALARY NUMBER(10),
    LEVEL_L NUMBER(5),
    STATUS NUMBER(5),
    NOTE LONG,
    CONSTRAINT PK_EMPLOYEE PRIMARY KEY(EMPNO),
    CONSTRAINT CHK_LEVEL CHECK(LEVEL_V BETWEEN 1 AND 7),
    CONSTRAINT CHK_STATUS CHECK(STATUS IN ('0', '1', '2'))
);

CREATE SEQUENCE SEQ_SKILL 
START WITH 1 INCREMENT BY 1;
CREATE TABLE SKILL(
    SKILLNO NUMBER(5),
    SKILLNAME VARCHAR2(10),
    NOTE LONG, 
    CONSTRAINT PK_SKILL PRIMARY KEY(SKILLNO)
);

CREATE TABLE EMP_SKILL(
    SKILLNO NUMBER(5),
    EMPNO NUMBER(5),
    SKILLLEVEL NUMBER(5),
    REGDATE DATE,
    DESCRIPTION LONG,
    CONSTRAINT PK_EMP_SKILL PRIMARY KEY(SKILLNO, EMPNO),
    CONSTRAINT FK_SKILLNO FOREIGN KEY(SKILLNO) REFERENCES SKILL(SKILLNO),
    CONSTRAINT FK_EMPNO FOREIGN KEY(EMPNO) REFERENCES EMPLOYEE(EMPNO)
);

CREATE SEQUENCE SEQ_DEPTNO 
START WITH 1 INCREMENT BY 1;
CREATE TABLE DEPARTMENT(
    DEPTNO NUMBER(5),
    DEPTNAME VARCHAR2(30),
    NOTE LONG,
    CONSTRAINT PK_DEPARTMENT PRIMARY KEY(DEPTNO)
);

-- 2
-- A
ALTER TABLE EMPLOYEE
ADD EMAIL VARCHAR2(30) UNIQUE;
-- B
ALTER TABLE EMPLOYEE
MODIFY MGRNO DEFAULT 0;

--3
-- A
ALTER TABLE EMPLOYEE
ADD CONSTRAINT FK_EMPLOYEE_DEPTNO
FOREIGN KEY(DEPTNO) REFERENCES DEPARTMENT(DEPTNO);

-- B
ALTER TABLE EMP_SKILL
DROP COLUMN DESCRIPTION;

-- 4
-- A
--INSERT VAO TABLE DEPARTMENT
INSERT INTO DEPARTMENT(DEPTNO, DEPTNAME, NOTE) VALUES(SEQ_DEPTNO.NEXTVAL, 'THUONG MAI', '');
INSERT INTO DEPARTMENT(DEPTNO, DEPTNAME, NOTE) VALUES(SEQ_DEPTNO.NEXTVAL, 'DIEN TU', '');
INSERT INTO DEPARTMENT(DEPTNO, DEPTNAME, NOTE) VALUES(SEQ_DEPTNO.NEXTVAL, 'CHUNG KHOAN', '');
INSERT INTO DEPARTMENT(DEPTNO, DEPTNAME, NOTE) VALUES(SEQ_DEPTNO.NEXTVAL, 'TAI CHINH', '');
INSERT INTO DEPARTMENT(DEPTNO, DEPTNAME, NOTE) VALUES(SEQ_DEPTNO.NEXTVAL, 'BAT DONG SAN', '');

--INSERT VAO TABLE EMPLOYEE
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS,EMAIL)
VALUES(1, 'NGUYEN VAN A', TO_DATE('01/01/2000', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 30000, 3, 1, 'NV1@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(2, 'NGUYEN VAN B', TO_DATE('1/1/2010', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 40000, 4, 1, 'NV2@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(3, 'NGUYEN VAN C', TO_DATE('1/1/2006', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 50000, 7, 1, 'NV3@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(4, 'NGUYEN THI D', TO_DATE('1/1/2001', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 30000, 1, 1, 'NV4@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(5, 'NGUYEN VAN E', TO_DATE('1/1/2007', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 80000, 5, 1, 'NV5@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(9, 'NGUYEN VAN E', TO_DATE('1/1/2007', 'DD/MM/YYYY'), 2, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 80000, 5, 2, 'NV9@GMAIL.COM');
--INSERT VAO TABLE SKILL
INSERT INTO SKILL(SKILLNO, SKILLNAME, NOTE) VALUES(SEQ_SKILL.NEXTVAL, 'CODE', '');
INSERT INTO SKILL(SKILLNO, SKILLNAME, NOTE) VALUES(SEQ_SKILL.NEXTVAL, 'EXECL', '');
INSERT INTO SKILL(SKILLNO, SKILLNAME, NOTE) VALUES(SEQ_SKILL.NEXTVAL, 'WORD', '');
INSERT INTO SKILL(SKILLNO, SKILLNAME, NOTE) VALUES(SEQ_SKILL.NEXTVAL, 'PP', '');
INSERT INTO SKILL(SKILLNO, SKILLNAME, NOTE) VALUES(SEQ_SKILL.NEXTVAL, 'ACESS', '');

--INSERT VAO TABLE EMP_SKILL
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(1, 1, 1, TO_DATE('1/8/1990', 'DD/MM/YYYY'));
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(2, 2, 4, TO_DATE('1/5/1991', 'DD/MM/YYYY'));
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(3, 3, 5, TO_DATE('1/4/1992', 'DD/MM/YYYY'));
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(4, 4, 7, TO_DATE('1/2/1993', 'DD/MM/YYYY'));
INSERT INTO EMP_SKILL(SKILLNO, EMPNO, SKILLLEVEL, REGDATE) VALUES(5, 5, 1, TO_DATE('1/1/1995', 'DD/MM/YYYY'));


-- B
CREATE VIEW EMPLOYEE_TRACKING AS
SELECT EMPNO, EMPNAME FROM EMPLOYEE WHERE LEVEL_V BETWEEN 3 AND 5;

--PLSQL
--B
CREATE OR REPLACE PROCEDURE PR_EMPLOYEE 
IS
BEGIN
    UPDATE EMPLOYEE
    SET LEVEL_L = 2
    WHERE LEVEL_L = 1 AND (TO_NUMBER(EXTRACT(YEAR FROM CURRENT_DATE)) - TO_NUMBER(EXTRACT(YEAR FROM STARTDATE)))>= 3;
    DBMS_OUTPUT.PUT_LINE(SQL%ROWCOUNT|| ' row affected');
END;

SET SERVEROUTPUT ON
EXECUTE PR_EMPLOYEE;

--C
--C1
CREATE OR REPLACE PROCEDURE PR_PRINT_EMP_OUT(EMP EMPLOYEE.EMPNO%TYPE)
IS
    ENAME EMPLOYEE.EMPNAME%TYPE;
    MAIL EMPLOYEE.EMAIL%TYPE;
    DNAME DEPARTMENT.DEPTNAME%TYPE;
BEGIN
    SELECT E.EMPNAME, E.EMAIL, D.DEPTNAME INTO ENAME, MAIL, DNAME FROM EMPLOYEE E JOIN DEPARTMENT D ON E.DEPTNO = D.DEPTNO
    WHERE EMPNO = EMP AND STATUS = 2;
    DBMS_OUTPUT.PUT_LINE(ENAME || '  ' || MAIL || '  ' || DNAME);
END;

EXECUTE PR_PRINT_EMP_OUT(9);

--D
CREATE OR REPLACE FUNCTION EMP_TRACKING(EMP NUMBER)
RETURN NUMBER
AS
    SAL NUMBER(10);
BEGIN
    SELECT SALARY INTO SAL FROM EMPLOYEE WHERE STATUS = 1 AND EMPNO = EMP;
    RETURN SAL;
END;

DECLARE
    PER EMPLOYEE.EMPNO%TYPE;
BEGIN
    PER := EMP_TRACKING(5);
    DBMS_OUTPUT.PUT_LINE(PER);
END;

--E
CREATE OR REPLACE TRIGGER TRS_EMPLOYEE 
BEFORE INSERT OR UPDATE 
ON EMPLOYEE
FOR EACH ROW
BEGIN
    IF(:NEW.LEVEL_L = 1 AND :NEW.SALARY  > 10000000) THEN
        DBMS_OUTPUT.PUT_LINE('LOI! KHONG HOP LE');
        ROLLBACK;
    ELSE 
        DBMS_OUTPUT.PUT_LINE('THANH CONG');
    END IF;
END;

INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(6, 'NGUYEN THI D', TO_DATE('1/1/2001', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 30000, 2, 1, 'NV6@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(7, 'NGUYEN VAN E', TO_DATE('1/1/2007', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 80000000, 1, 1, 'NV7@GMAIL.COM');
INSERT INTO EMPLOYEE(EMPNO, EMPNAME, BIRTHDAY, DEPTNO, MGRNO, STARTDATE, SALARY, LEVEL_L, STATUS, EMAIL)
VALUES(8, 'NGUYEN VAN E', TO_DATE('1/1/2007', 'DD/MM/YYYY'), 1, 1, TO_DATE('2/2/2001', 'DD/MM/YYYY'), 90000, 3, 1, 'NV8@GMAIL.COM');

--F
DECLARE 
    EMP EMPLOYEE.EMPNO%TYPE;
    LEV EMPLOYEE.LEVEL_L%TYPE;
    MSKILL EMP_SKILL.SKILLLEVEL%TYPE;
    SDATE EMPLOYEE.STARTDATE%TYPE;
    SAL EMPLOYEE.SALARY%TYPE;
    CURSOR EMP_CURSOR IS SELECT E.EMPNO, E.LEVEL_L, E.STARTDATE, E.SALARY, ES.SKILLLEVEL FROM EMPLOYEE E JOIN EMP_SKILL ES ON E.EMPNO = ES.EMPNO;
BEGIN
    OPEN EMP_CURSOR;
    LOOP
        FETCH EMP_CURSOR INTO EMP, LEV, SDATE, SAL, MSKILL;
        IF(LEV = 2  AND MSKILL > 1 AND (TO_NUMBER(EXTRACT(YEAR FROM CURRENT_DATE)) - TO_NUMBER(EXTRACT(YEAR FROM SDATE))>= 2)) THEN
            UPDATE EMPLOYEE
            SET SALARY = SAL + 300000
            WHERE EMPNO = EMP;
        ELSIF(LEV = 3  AND MSKILL  > 1 AND (TO_NUMBER(EXTRACT(YEAR FROM CURRENT_DATE)) - TO_NUMBER(EXTRACT(YEAR FROM SDATE))>= 3)) THEN
             UPDATE EMPLOYEE
             SET SALARY = SAL + 500000
             WHERE EMPNO = EMP;
        END IF;
        EXIT WHEN EMP_CURSOR%NOTFOUND;
    END LOOP;
    DBMS_OUTPUT.PUT_LINE(SQL%ROWCOUNT || ' row affected');
    CLOSE EMP_CURSOR;
END;






